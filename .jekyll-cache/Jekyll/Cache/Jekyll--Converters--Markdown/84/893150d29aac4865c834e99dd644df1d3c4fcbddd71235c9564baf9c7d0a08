I"8<p><img src="http://klimovproject.ru/images/post-hero/thinking-about-SSG.png" alt="Разбираем преимущества SGG" /></p>

<p>Все кто впервые задумывается о бизнесе в интернете обычно стоит перед выбором:</p>

<ol>
  <li>Решиться на серьёзные затраты, нанимая разработчиков и дизайнеров</li>
  <li>Начать изучать основы HTML и CSS самостоятельно</li>
  <li>Использовать различные <strong>CMS</strong> (Content Management System)</li>
</ol>

<h1 id="что-же-выбрать-cms-или-ssg">Что же выбрать CMS или SSG</h1>

<p>Первый вариант зависит от бюджета, а 2ый и 3ий более привлекательны в силу наименьших затрат, это понятно. Но из 2 и 3 варианта многие выбирают именно CMS (Wordpress/Joomla), не подозревая, что есть в природе такой зверь, как <strong>SSG</strong> (Static Site Generator). А он между прочим имеет огромные преимущества и активно захватывает свою нишу. Например данный блог создан на Jekyll - <a href="https://www.staticgen.com/">самом популярном</a> статическом генераторе с 2015 года!</p>

<h2 id="плюсы-ssg">Плюсы SSG</h2>

<ol>
  <li>
    <p>Минимальные нагрузки</p>

    <p><img src="http://watchfit.com/wp-content/uploads/2016/09/42329412_l-1024x682.jpg" alt="нагрузки при работе сайтов на CMS и SSG" /></p>

    <p>Многие CMS приложения предлагают встроенные (или в виде плагинов) системы кэширования, чтобы обеспечить генерирование страниц и использование их повторно, если необходимо. Это эффективно, но лишние действия все равно имеют место быть: например, при проверке файлов кэша и повторной генерации страниц.</p>

    <p>В то же время статические сайты предварительно кэшируют страницы, и срок жизни такого кэша вечен. Файлы также могут быть сжаты для еще меньшей нагрузки. Вот и получается, что при использовании одного и того же шаблона статический сайт всегда будет работать лучше, чем сайт построенный на CMS.
 Мой сайт на google pagespeed выдаёт отличный <a href="https://developers.google.com/speed/pagespeed/insights/?url=klimovproject.ru&amp;tab=desktop">результат</a></p>

    <p><img src="www.hosting.klimovproject.ru/imagehost/google_pagespeed_klimovproject.png" alt="google pagespeed klimovproject" /></p>
  </li>
  <li>
    <p>Высокая безопасность</p>

    <p>Что нужно для установки WordPress:</p>

    <ul>
      <li>совместимая операционная система типа Ubuntu или CentOS</li>
      <li>веб-сервер — например, Apache или NGINX</li>
      <li>PHP с необходимыми расширениями</li>
      <li>MySQL</li>
      <li>сам WordPress</li>
      <li>шаблон (тема)
 Все это должно быть установлено и настроено. На самом деле WordPress — не самая прихотливая штука, ведь существуют приложения, у которых зависимостей в разы больше, но даже этого списка достаточно, чтобы при обновлении всего одной из перечисленных частей списка, сломалось все.</li>
    </ul>

    <p>В то же время, статический сайт — очень легкий и может быть размещен на любом сервере, который в состоянии отдавать файлы. И вам больше ничего не нужно устанавливать, настраивать и обновлять.</p>
  </li>
  <li>
    <p><strong>Надёжность</strong></p>

    <p>CMS — это целый комплекс, с огромным количеством перемещаемых частей и «точек отказа». Запуская сайт на вордпрессе, не зависимо от того, колько времени он уже проработал, вы точно хотя бы раз столкнетесь с этой страшной фразой «Failed to establish a database connection». Опыт подсказывает, что непредвиденные проблемы в CMS могут возникнуть в результате внезапного скачка трафика, из-за чего может рухнуть база данных или разорваться активные соединения.</p>

    <p>В это же время, обслуживание статического сайта менее напряженное, так как сервер просто должен отдавать HTML файлы. Конечно, в этой ситуации тоже можно положить сервер, но это будет сложнее: нужно в разы больше одновременных запросов.</p>
  </li>
  <li>
    <p><strong>Высокая безопасность</strong></p>

    <p>Можно выделить море причин, по которым кто-то решит атаковать ваш сайт: угон трафика, мошенническая реклама, ссылки и пр.</p>

    <p>CMS сам дает поле для таких атак. Самым очевидным тонким местом является форма входа: она безопасна настолько, насколько безопасен самый слабый пароль одного из пользователей. Имейте в виду, что код любой страницы выполняется на сервере, что уже предполагает потенциальные дыры — например, отправку спама через контактную форму. Поначалу это может быть не очевидным, ведь лучшие преступники долго остаются незамеченными.</p>

    <p>У статического сайта очень мало или вообще нет функциональности на стороне сервера. Вы не можете получить доступ с помощью скриптов или за счет дыр в безопасности базы данных. У кого-то, возможно, и получится получить доступ с помощью SSH или FTP, но им нужно будет очень постараться, чтобы принести вред больше, чем порча страниц или загрузка файлов. Быстрая команда «git status» или, на крайний случай, простая проверка папки сможет быстро выявить следы несанкционированного доступа. Вам просто будет необходимо изменить пароли, удалитьвесь сайт полностью и восстановить все заново.</p>
  </li>
  <li>
    <p><strong>Управление контентом</strong></p>

    <p>Вы неделями разрабатываете симпатичные темы для CMS, но как только сайт переходит в пользование клиенту, все ломается за считанные минуты. Было такое? Использовать CMS не всегда легко, так как она предоставляет некоторую власть при редактировании контента. Вы, конечно, можете ограничить или заблокировать права на установку плагинов для клиента, но это никак не помешает ему изменить шрифты, добавить странных, красивых на его взгляд, цветов, залить плохую фотографию и каким-то образом исказить макет.</p>

    <p>В случае статического сайта чаще всего используются Markdown файлы. Их использование ограничивает возможности пользователей, в результате они делают меньше ошибок, и страница отображается в первозданном виде. А для удобного редактирования файлов можно пользоваться удобным сервисом StackEdit.</p>
  </li>
  <li>
    <p><strong>Контроль версий и тестирование</strong></p>

    <p>Содержание базы данных непостоянно. CMS позволяет пользователям добавлять, изменять или удалять содержимое по их желанию. Вы можете создавать резервные копии баз данных, но даже если делать это регулярно, все равно существует шанс потерять часть данных.</p>

    <p>Статический сайт более безопасен, если, конечно, предположить, что весь контент хранится в Markdown файлах и вы используете систему контроля версий типа Git. И даже после сохранения измененных файлов сделанные изменения можно легко «откатить». Тестирование тоже упрощаетсч, т.к. сайт может быть собран и просмотрен где угодно, даже на компьютере клиента.</p>

    <p>Потратив чуть больше усилий, вы можете сделать систему для разворачивания сайта на промежуточном сервере, а после добавления и апрува нового содержимого, можно будет автоматически переносить на главный сервер.</p>
  </li>
  <li>
    <p><strong>Гибкость</strong></p>

    <p>CMS, как правило, ограничивает ваши возможности, потому что все привязано к конкретным полям в базе данных. Если вы захотите добавить виджет, например, Twitter на какие-то страницы, нужен будет плагин, шорткод или что-то еще.</p>

    <p>В статическом сайте можно вставить виджет непосредственно в файл в виде фрагмента кода. Есть совсем небольшие ограничения, т.к. вы освобождены от тех, что накладывает CMS.</p>
  </li>
</ol>

<h2 id="минусы-ssg-в-сравнении-с-cms">Минусы SSG в сравнении с CMS</h2>

<ol>
  <li>
    <p><strong>Отсутствие классической “админки”</strong></p>

    <p>То есть нет интерфейса для редактирования “как в Word” или безумного WYSIWYG-редактора. Посты нужно писать в файлах определённого типа, в определённом формате вручную.
 Поиск удобного решения этой проблемы - в процессе. В данный момент тестируется сервис <a href="https://cloudcannon.com/">CloudCannon</a>, который предоставляет админку вместе с хостингом, но не русифицирован.
 Так же есть плагин <a href="https://jekyll.github.io/jekyll-admin/">Jekyll Admin</a></p>
  </li>
  <li>
    <p><strong>Родовое отсутствие динамического контента</strong></p>

    <p>Вместо динамических модулей приходится использовать сторонние сервисы, такие как:</p>
  </li>
</ol>

<ul>
  <li><a href="https://www.uservoice.com/">UserVoice.com</a> - для обратной связи</li>
  <li><a href="https://www.formspree.io/">Formspree.io</a> - для форм отправки запросов на почту</li>
  <li><a href="https://www.algolia.com/">Algolia.com</a> - для продвинутого поиска (стандартный может не подойти)</li>
  <li><a href="https://www.hypercomments.com/">HyperComments.com</a> - для функции комментирования</li>
</ul>

<p>И конечно же интернет-магазин на SSG не запустишь, но это уже другая ниша. Если же решать вопрос создания небольшого сайта для портфолио фотографа или сайта-визитки агентства услуг - то Jekyll подойдёт идеально!</p>

<p><a href="http://www.dejurka.ru/articless/seven-yes-to-static-sites-generators/">© Источник</a></p>
:ET